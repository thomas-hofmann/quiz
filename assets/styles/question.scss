.answer__label {
    width: 100%;
    line-height: 1.3;
    padding: 20px 30px;
    position: relative;
    word-break: break-word;
    
    display: flex;
    align-items: center;
    justify-content: center;

    box-shadow: $box-shadow-inset;

    transition: background-color 0.25s ease, color 0.25s ease, box-shadow 0.25s ease, text-shadow 0.25s ease;

    @media (hover: hover) and (pointer: fine) {
        &:hover {
            box-shadow: inset 0 .5rem 1rem rgba($black, .15);
            text-shadow: 0 .125rem .25rem rgba($black, .075);
            cursor: pointer;

            .question__letter {
                box-shadow: 0 .125rem .25rem rgba($black, .075);
            }

        }
    }

    input[type="checkbox"]:checked + & {
        background: #212529;
        color: white; // Matching border color
        .question__letter {
            background-color: white !important;
            color:#212529 !important;
            border-color: #212529 !important;
        }
    }
}

.question {
    background: #fff;
}

.quiz__finished {
    background: #fff;
}

.question__letter {
    position: absolute;
    left: 0;
    top: 0;
    padding-left: 5px;
    padding-right: 5px;
    border-bottom-right-radius: 0.25rem;

    box-shadow: $box-shadow-inset;
    
    font-size: 23px;
    font-weight: 600;

    transition: background-color 0.25s ease, color 0.25s ease, box-shadow 0.25s ease, text-shadow 0.25s ease;
}

.question__letter--statistics {
    font-size: 18px;
}

.quiz__button, .quiz__button--initial {
    margin: auto;
    display: block;
    width: 50%;

    @include media-breakpoint-down(lg) {
        width: 100%;
    }

    &:not(:disabled) {
        .next-icon {
            animation: horizontal-moving 1s linear infinite;
        }
    }
}

.question__text {
    font-weight: 600;
    line-height: 1.1;
}

.question__answer-1 {
    border-top-left-radius: 0.25rem;
    border: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);

    @include media-breakpoint-down(lg) {
        border-top-right-radius: 0.25rem;
    }
}

.question__answer-2 {
    border-top-right-radius: 0.25rem;
    border-top: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);
    border-bottom: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);
    border-right: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);

    @include media-breakpoint-down(lg) {
        border-top-right-radius: 0;
        border-top: 0px;
        border-left: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);
    }
}

.question__answer-3 {
    border-bottom-left-radius: 0.25rem;
    border-bottom: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);
    border-left: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);
    border-right: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);

    @include media-breakpoint-down(lg) {
        border-bottom-left-radius: 0;
    }
}

.question__answer-4 {
    border-bottom-right-radius: 0.25rem;
    border-bottom: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);
    border-right: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);

    @include media-breakpoint-down(lg) {
        border-bottom-left-radius: 0.25rem;
        border-left: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color);
    }
}

.rounded-top-left {
    border-top-left-radius: 0.25rem; /* or any radius value */
}

.rounded-top-right {
    border-top-right-radius: 0.25rem; /* or any radius value */
}

.rounded-bottom-right {
        border-bottom-right-radius: 0.25rem; /* Adjust the radius as needed */
}
.rounded-bottom-left {
    border-bottom-left-radius: 0.25rem; /* Adjust the radius as needed */
}

.answer__logo {
    position: absolute;
    left: 7px;
    top: 7px;
    font-size: 20px;
}

.answer__logo--right {
    position: absolute;
    right: 7px;
    top: 7px;
    font-size: 20px;
}

.finished__accordion-button {
    .fa-eye {
        display: none;
    }
    .fa-eye-slash {
        display: inline-block ;
    }
}

.finished__accordion-button.collapsed {
    .fa-eye {
        display: inline-block;
    }
    .fa-eye-slash {
        display: none;
    }
}

.quiz__overlay--z-index {
    position: relative;
    z-index: 99;
}

.quiz-alert-sticky {
    z-index: 100;
    position: sticky;
    top:0;
}

.quiz__overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1; /* Stelle sicher, dass es hoch genug ist, um Ã¼ber anderen Elementen zu liegen */
    pointer-events: none; /* Verhindert, dass Klicks abgefangen werden */
}

.container--fade-in {
    display: none;
}

/* Define keyframes for blinking with border-radius respected */
@keyframes blinkCorrect {
    0% { box-shadow: inset 0 0 5rem transparent; }
    25% { box-shadow: inset 0 0 5rem $success; }
    75% { box-shadow: inset 0 0 5rem transparent; }
    100% { box-shadow: inset 0 0 5rem transparent; }
}

@keyframes blinkAlmost {
    0% { box-shadow: inset 0 0 5rem transparent; }
    25% { box-shadow: inset 0 0 5rem $warning; }
    75% { box-shadow: inset 0 0 5rem transparent; }
    100% { box-shadow: inset 0 0 5rem transparent; }
}

@keyframes blinkWrong {
    0% { box-shadow: inset 0 0 5rem transparent; }
    25% { box-shadow: inset 0 0 5rem $danger; }
    75% { box-shadow: inset 0 0 5rem transparent; }
    100% { box-shadow: inset 0 0 5rem transparent; }
}

/* Define the classes to use the animations */
.container--correct {
    animation: blinkCorrect 2s linear 1;
    border-radius: inherit; /* Ensure border-radius is applied */
}

.container--almost {
    animation: blinkAlmost 2s linear 1;
    border-radius: inherit; /* Ensure border-radius is applied */
}

.container--wrong {
    animation: blinkWrong 2s linear 1;
    border-radius: inherit; /* Ensure border-radius is applied */
}

.alert-finished {
    animation: hideAlert 3s forwards;
}

.alert-bye {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation: showAlert 5s forwards;
}

@keyframes hideAlert {
    0% {
        visibility: visible;
        opacity: 1;
    }
    100% {
        visibility: hidden;
        opacity: 0;
    }
}

@keyframes showAlert {
    0% {
        opacity: 0;
    }
    50% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}